name: Build and Push Docker Images and tarballs

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        #When cli and api are added, they will be added here too.
        service: [bot]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version: '1.24.6'

      - name: Build binary
        #When cli and api are added it will do the BuildAll target.
        run: |
          go run mage.go BuildBot
      
      - name: Package tarball
        run: |
          mkdir build/tarball/usr -p
          cp -r build/bin/ build/tarball/usr/bin/

      - name: Upload tarball artifact
        uses: actions/upload-artifact@v4
        with:
          name: xyter.tar.gz
          path: build/tarball

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          # list of Docker images to use as base name for tags
          images: |
            ghcr.io/zynerorg/xyter
          # generate Docker tags based on the following events/attributes
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
          flavor: |
            prefix=${{ matrix.service }}

      - name: Login to GHCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          target: ${{ matrix.service }}
          tags: zynerorg/image:${{ matrix.service }}
          push: true
